Импортируются
import os
os.getcwd() -- в какой я сейчас директории
os.path.join(os.getcwd(), '..')

Импортируем что-то конкретное
from os import getcwd
getcwd() --без os
Но мы не можем вызвать метод с os, то есть так os.getcwd() мы не сможем сделать
Но можно:
from os import *

Структура папок и файлов:
папка1
    папки12
        main.py
папка2
    папки22
        mod.py

Чтобы main импортировать mod, нужно:
from ..папка22.mod import foo

Но так тоже ничего не получится. Чтобы узнать где питон ищет библиотека, нужно прописать sys.path. Он выдаст библиотеки, где он их ищет
Если он их ищет не в предполагаемой директории, то нужно добавить в список нашу директорию

sys.path.append(
    os.path.join(os.getcwd(), '..', 'тест')
)

from test2.mod2 import foo2

Папка test2, файл mod2

import os.path

os.path.normpath(path)

Позволяет убрать избыточные имволы из пути, то есть А/./Б превращается в А/Б

>>> import os.path
>>> os.path.abspath('file.txt')
# '/home/docs-python/file.txt'

Основные модули

os, sys, math, glob time, datetime, json, pickle, random, cmath и другие

os.listdir() -- все файлы и все папки в текущей директории
math.copysign(-1) -- возвращает -1, если число отрицательное, и наоборот
statistics.mean() -- находит среднее
glob('*.py') -- выведет все питоновские файлы из текущей директории

start = time()

sleep(2)

print(time - start) #2.00

f = open('text.txt', 'r')
s = f.read()
Если в файле 2 строки, то мы отбрасываем первую строку, если мы её уже прочитали
open('text.txt', 'r')
open('text.txt', 'rb') -- binary
open('text.txt', 'w')
Дальше файл нужно обязательно закрыть:
f.close()

Но этот режим только записывает новое, не добавляет.
Нужно поменять режим
open('text.txt', 'a') -- append

open('text.txt', 'r', encoding='utf-8') -- бывает такое, что при чтении возникает ошибка кодировки. ЭТо исправляется методом тыка:
cp1251/1252/1253
latin-1/2/3
utf-8
Чтобы посмотреть кодировку, нужно просто вывести
f = open('text.txt')
print(f)

Вместо того, чтобы открывать и закрывать файл, можно использовать контекстные менеджер with. Он открывает и закрывает файл сам
with open('text.txt', 'r', encoding='utf-8') as f:
    s = f.read()








Чтобы узнать кодировку можно скачать Notepad++ и там её узнать
Ввсе кодировки['ascii',
 'cp037',
 'cp424',
 'cp437',
 'cp500',
 'cp737',
 'cp775',
 'cp850',
 'cp852',
 'cp855',
 'cp856',
 'cp857',
 'cp860',
 'cp861',
 'cp862',
 'cp863',
 'cp864',
 'cp865',
 'cp869',
 'cp874',
 'cp875',
 'cp1006',
 'cp1026',
 'cp1140',
 'cp1250',
 'cp1251',
 'cp1252',
 'cp1253',
 'cp1254',
 'cp1255',
 'cp1256',
 'cp1257',
 'cp1258',
 'latin_1',
 'iso8859_2',
 'iso8859_3',
 'iso8859_4',
 'iso8859_5',
 'iso8859_6',
 'iso8859_7',
 'iso8859_8',
 'iso8859_9',
 'iso8859_10',
 'iso8859_13',
 'iso8859_14',
 'iso8859_15',
 'koi8_r',
 'koi8_u',
 'mac_cyrillic',
 'mac_greek',
 'mac_iceland',
 'mac_latin2',
 'mac_roman',
 'mac_turkish',
 'utf_16',
 'utf_16_be',
 'utf_16_le',
 'utf_7',
 'utf_8']




Чтобы работать с диском гугла, нужно установить библиотеку gdown
pip install gdown
import gdown
gdown.download_folder(url, quiet = False, remaining = True) -- пвторой аргумент выводит информацию в терминал, если задан False, третий параметр позволяет читать не больше 50 файлов на диске

Вывести все файлы в папке
import glob
glob('data/*.*') -- выводит все файлы из папки

Чтобы вывести всё, стоящее между двумя словами (слово1, слово2), пишем:
слово1(.*)слово2

Как это сделать в питоне?
import re
reg = re.compile('слово1(.*)слово2', re.MULTILINE | re.DOTALL) -- сногострочное выражение и точки могут быть как перевод строки

Напоминаю:

reg = re.compile('слово1(.*)слово2', re.MULTILINE | re.DOTALL)
solution = reg.findall(text)[0].strip() -- метод возвращает список из одного элемента и мы её стрипируем

