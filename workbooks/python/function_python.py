"""
Напишите программу: запросите у пользователя его имя,
в ответ на экране должно появиться приветствие с обра-
щением по имени, которое ввели ранее
"""

def name(name):
    print(name)






"""
Напишите программу: запросите у пользователя длину
и ширину комнаты. После ввода значений произведите
расчет площади комнаты и выведите ответ на экран.
Длина и ширина комнаты должны вводиться в формате
числа с плавающей запятой. Дополните ввод и вывод
единицами измерения — метрами.
"""

def area(length, width):
    return length * width





"""
Создайте программу: запросите у пользователя длину
и ширину садового участка в метрах. Выведите на экран
площадь участка в сотках.
"""

def area(length, width):
    return length * width / 100





"""
Разработайте программу: запросите у пользователя
целое четырехзначное число и посчитайте сумму цифр
этого числа
"""

def sum_integers(integer):
    one = integer // 1000
    two = integer % 1000 // 100
    three = integer % 1000 % 100 // 10
    four = integer % 1000 % 100 % 10
    return (one + two + three + four)





"""
Интернет-магазин предоставляет услугу доставки: 100
рублей за первый товар в заказе, 30 рублей — за каждый
следующий. Напишите программу, которая принимает
количество товаров и возвращает cтоимость доставки
"""

def devilery(goods):
    return goods * 100 - 70





"""
Напишите функцию, которая будет принимать три числа
и возвращать их медиану.
Важно: в коде используйте функцию median().

Ответ выведите на экран
"""

from statistics import median

def median(x, y, z):
    return median(x, y, z)





"""
Создайте программу, в которой пользователь сможет
ввести временной промежуток в виде количества дней,
часов, минут и секунд и узнать общее количество секунд,
которое составляет введенный отрезок
"""

def count_second(*args): 
    seconds1 = 0 + (args[1] * 3_600) + (args[2] * 60) + args[3]
    seconds2 = (args[4] * 86_400) + (args[5] * 3_600) + (args[6] * 60) + args[7]
    return seconds2 - seconds1 - 86_400






"""
Никита решил сделать ремонт в своей квартире. Он хочет заменить старое 
напольное покрытие во всех комнатах на новое. Чтобы купить нужное количество 
покрытия, Никите необходимо знать площадь каждой комнаты. Все комнаты в 
квартире Никиты прямоугольные.

Помогите Никите определить площадь комнат. Напишите функцию renovation, которая 
сможет рассчитать площадь любой комнаты. Функция должна принимать на вход два 
аргумента: длину комнаты length и ширину width.
"""

def renovation(length, width):
    return length * width






"""
Ваша программа очень помогла — теперь Никита знает площадь всех комнат. 
Он решил положить плитку в большинстве комнат. К сожалению, плитка продается 
в упаковках по несколько штук, а на упаковке не указывают, какую площадь 
пола можно покрыть одной такой упаковкой.

Доработайте функцию renovation, которую вы создали в предыдущем задании. Пусть она 
принимает на вход четыре аргумента — длину и ширину комнаты, площадь одной плитки 
и количество плиток в одной упаковке. В качестве ответа верните количество упаковок 
плитки, которое Никите нужно купить.

Чтобы округлить число в большую сторону, используйте функцию math.ceil(). В первой 
строке вашей программы напишите: import math. После этого вы сможете использовать 
функцию в своем коде — просто укажите в скобках число, которое нужно округлить.
"""

import math

def renovation(length, width, area_plit, quantity_plit): # 100 3 3 
    area = length * width
    quantity_plits = math.ceil(area / area_plit)
    quantity_pack = math.ceil(quantity_plits / quantity_plit)
    return quantity_pack;
    
print(renovation(10, 10, 3, 3))






"""
Благодаря функции renovation, которую вы написали, Никита оказался полностью готов 
к походу в строительный магазин! Он обошел несколько крупных супермаркетов и записал 
цены на плитку в список. Пусть плитка и была одинаковой во всех магазинах, цены на 
нее значительно отличались. Никита хочет сэкономить на ремонте, поэтому ему важно 
приобрести плитку по минимально возможной цене.

Доработайте функцию renovation из предыдущего задания. Пусть она принимает еще один 
аргумент — список с ценами на плитку в нескольких магазинах. Рассчитайте, сколько Никита 
заплатит за плитку для ремонта в одной комнате, если он приобретет ее по самой 
низкой цене из списка.
"""

def renovation(length, width, area_plit, quantity_plit, *args):
    area = length * width
    quantity_plits = math.ceil(area / area_plit)
    quantity_pack = math.ceil(quantity_plits / quantity_plit)
    return min(args) * quantity_pack







"""
Никита использовал функцию renovation и теперь может приступить к ремонту. Чтобы найти 
мотивацию, он решил добавить элемент игры в ремонт — по четным дням недели он будет ремонтировать 
комнаты с четной площадью, а по нечетным — с нечетной. Дни недели Никита пронумеровал с единицы, 
то есть 1 — это понедельник, 2 — это вторник и так далее.

Напишите функцию parity_check, которая будет принимать два аргумента — номер дня недели и площадь 
комнаты. Если Никита может ремонтировать эту комнату в заданный день, верните True. Иначе верните 
False. Комнаты в списке не повторяются.
"""

def parity_check(day, area):
    if (day % 2 == 0 and area % 2 == 0) or (day % 2 == 1 and area % 2 == 1):
        return True;
    else:
        return False
    





"""
Благодаря вашей помощи, Никита успешно закончил ремонт в квартире за неделю. Теперь ему интересно 
подвести статистику — как много времени он тратил на ремонт в среднем каждый день? Сколько всего 
времени он потратил на ремонт? Какое минимальное и максимальное количество времени в день он тратил? 
Все данные за неделю Никита записал в список, где каждое значение — количество времени в каждый 
из дней недели.

Напишите функцию stats, которая найдет среднее количество времени на ремонт в день, общее время за 
неделю, максимальное и минимальное время на ремонт в день. Верните данные в следующем формате:

Среднее время в день: значение, Всего времени: значение, Максимальное время: значение, Минимальное время: значение.
"""

def stat(*args):
    public = sum(args)
    maximal = max(args)
    minimal = min(args)
    middle = public / len(args)
    return f"Среднее время в день: {middle}, Всего времени: {public}, Максимальное время: {maximal}, Минимальное время: {minimal}."




